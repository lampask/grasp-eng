{"version":3,"sources":["src/components/LoadingScreen.tsx","src/layout/Intro.tsx","src/components/Title.tsx","src/components/Check.tsx","src/lib/state.ts","src/layout/ControlsSidebar.tsx","src/components/Highlight.tsx","src/layout/Paper.tsx","src/components/SidebarButton.tsx","src/components/Tool.tsx","src/components/Toolbox.tsx","src/layout/ToolsSidebar.tsx","src/layout/Main.tsx","App.tsx"],"names":["LoadingScreen","View","style","styles","body","ActivityIndicator","size","StatusBar","StyleSheet","create","display","height","flexDirection","alignItems","justifyContent","backgroundColor","paddingHorizontal","Intro","data","introduced","container","box","Text","selectable","text","title","undefined","content","Pressable","button","onPress","buttonText","position","left","bottom","right","width","overflow","fontWeight","padding","fontSize","top","border","borderRadius","marginVertical","margin","Title","name","marginTop","color","textAlignc","fontStyle","Check","results","res","resText","forEach","result","breakpoint","message","sphere","marginBottom","marginRight","textAlign","transform","translateX","selectedState","atom","key","default","resultsState","pairingState","settingState","ControlsSidebar","useRecoilState","isTabletOrMobileDevice","useMediaQuery","maxDeviceWidth","column","row","marginHorizontal","Highlight","id","count","device","paraghraph","useState","selected","setSelected","pairing","substring","range","newSelected","Array","fill","length","deviceId","deviceSelectedAssigned","deviceSelected","correcr","incorrect","alignSelf","borderWidth","borderColor","Paper","devices","ScrollView","nestedScrollEnabled","paper","split","map","index","flag","elem","flex","flexWrap","fontFamily","paddingVertical","SidebarButton","Tool","description","modalVisible","setModalVisible","setPairing","selectedText","selectedTextId","indexOf","tool","includes","idx","findIndex","pair","textId","newPairing","structuredClone","buttonSelect","FontAwesome","Modal","animationType","transparent","visible","onRequestClose","centeredView","modalView","buttonClose","textStyle","MaterialCommunityIcons","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","modalText","Toolbox","tools","settings","pairCount","rhetoricHeadline","paddingBottom","ToolsSidebar","info","textSetter","setResults","checkAnswersButton","i","Math","trunc","nextButton","Main","textState","setSettings","setText","setDevices","useEffect","texts","guides","sort","random","from","_","author","App","wasIntroduced","setIntro","isLoading","setLoading","setData","fetch","then","response","json","catch","error","console","finally","intro"],"mappings":"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","file":"static/js/app.88d4337f.chunk.js","sourcesContent":["import { StyleSheet, View, ActivityIndicator } from \"react-native\";\nimport { StatusBar } from \"expo-status-bar\";\n\nexport default function LoadingScreen() {\n  return (\n    <View style={styles.body}>\n      <ActivityIndicator size='large' />\n      <StatusBar style='auto' />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    display: \"flex\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#f2f2f6\",\n    paddingHorizontal: 15,\n  },\n});\n","import { BlurView } from 'expo-blur';\nimport { StyleSheet, View, Text, Pressable } from 'react-native';\nimport Markdown from 'react-native-markdown-display';\n\nexport const Intro = ({ data, introduced }: { data: Intro, introduced: React.Dispatch<React.SetStateAction<boolean>> }) => {\n    return (\n        <BlurView style={styles.container}>\n            <View style={styles.box}>\n                <Text selectable={false} style={styles.text}>{data.title}</Text>\n                <Markdown>\n                    {data !== undefined ? data.content : \"\"}\n                </Markdown>\n                <Pressable style={styles.button} onPress={() => { introduced(true) }}>\n                    <Text>{data.buttonText}</Text>\n                </Pressable>\n            </View>\n        </BlurView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        position: 'absolute',\n        left: 0,\n        bottom: 0,\n        right: 0,\n        height: '100%',\n        width: '100%',\n        overflow: 'hidden',\n    }, \n    text: {\n        fontWeight: 'bold',\n        padding: 10,\n        fontSize: 17,\n    },\n    box: {\n        width: '50%',\n        position : 'absolute',\n        left: '25vw',\n        top: '50vh',\n        display: 'flex',\n        backgroundColor: '#fff',\n        border: '1px solid #000',\n        borderRadius: 33,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        marginVertical: 10,\n    },\n    button: {\n        backgroundColor: '#5bc8af',\n        borderRadius: 33,\n        padding: 10,\n        margin: 10,\n    }\n});","import { StyleSheet, Text, View } from 'react-native';\n\nexport const Title = ({ title, name }: { title: string, name: string }) => {\n    return (\n        <View style={styles.box} >\n            <Text style={styles.title}>{title}</Text>\n            <Text style={styles.name}>by {name}</Text>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({ \n    title: {\n        marginTop: 75,\n        fontSize: 34,\n        fontWeight: 'bold',\n        color: 'black',\n        textAlignc: 'center',\n    },\n    box: {\n        width: '50hw',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    name: {\n        fontSize: 20,\n        fontStyle: 'italic',\n        color: 'gray',\n    }\n});","import { StyleSheet, Text, View } from 'react-native';\n\nexport const Check = ({ results, res }: { results: number, res: Result[] }) => {\n    \n    let resText = \"\";\n    res.forEach((result) => {\n        if (result.breakpoint <= results ) {\n            resText = result.message;\n        }\n    })\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.text}>{resText}</Text>\n            <View style={styles.sphere}>\n                <Text style={styles.result}>{results}%</Text>\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 275,\n        height: 75,\n        display: 'flex',\n        backgroundColor: '#5bc8af',\n        borderRadius: 33,\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: 30\n    },\n    text: {\n        fontWeight: 'bold',\n        padding: 10,\n        fontSize: 14,\n        marginRight: 90,\n        textAlign: 'center',\n    },\n    sphere: {\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#00a368', \n        width: 105,\n        height: 105,\n        borderRadius: 105,\n        backgroundColor: '#00a368',\n        transform: [{translateX: 100}],\n    },\n    result: {\n        fontSize: 40,\n        fontWeight: 'bold',\n    }\n});","import { atom } from \"recoil\";\n\nexport const selectedState = atom({\n    key: \"selected\",\n    default: [] as boolean[],\n});\n\nexport const resultsState = atom({\n    key: \"results\",\n    default: -1 as number,\n});\n\nexport const pairingState = atom({\n    key: \"pairing\",\n    default: [] as Array<{\n        textId: number;\n        deviceId: number;\n    }>,\n});\n\nexport const settingState = atom({\n    key: \"settings\",\n    default: {} as Settings\n});","import { StyleSheet, View } from 'react-native';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRecoilState } from 'recoil';\nimport { Check } from '../components/Check';\nimport { resultsState } from '../lib/state';\n\nexport const ControlsSidebar = ({res}: { res: Result[] }) => {\n    const [results, setResults] = useRecoilState(resultsState);\n    const isTabletOrMobileDevice = useMediaQuery({    \n        maxDeviceWidth: 1224,\n      });\n    return (\n        <View style={[styles.container, isTabletOrMobileDevice ? styles.column : styles.row]}>\n            {results !== -1 ? <Check results={results} res={res} /> : <></>}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        marginHorizontal: 20,\n    },\n    row: {\n        width: '20%',\n    },\n    column: {\n        width: '90%',\n    }\n});","import { useState } from 'react';\nimport { Pressable, StyleSheet, Text, View } from 'react-native';\nimport { useRecoilState } from 'recoil';\nimport { pairingState, resultsState, selectedState } from '../lib/state';\n\nexport const Highlight = ({ id, count, device, paraghraph, size }: { id: number, count: number, device: {name: number;range: Array<number>}, paraghraph: string, size: number}) => {\n    const [isHovered, setIsHovered] = useState(false);\n    const [selected, setSelected] = useRecoilState(selectedState);\n    const [pairing, setPairing] = useRecoilState(pairingState);\n    const [results, setResults] = useRecoilState(resultsState);\n\n    return (\n        <Text>{paraghraph.substring(0, device.range[0]-count)}<Text onPress={()=>{\n            let newSelected = Array(size).fill(false, 0, size);\n            newSelected[id] = !selected[id];\n            setSelected(newSelected);\n        }} >\n            <Text style={[styles.device, pairing.length != 0 && pairing[id].deviceId != -1 ? styles.deviceSelectedAssigned : {}, selected[id] ? styles.deviceSelected : {}, results != -1 ? (pairing[id].deviceId === device.name ? styles.correcr : styles.incorrect) : {}]}>{paraghraph.substring(device.range[0]-count, device.range[1]-count)}</Text>\n        </Text>{paraghraph.substring(device.range[1]-count, count+paraghraph.length)}</Text>\n    );\n};\n\nconst styles = StyleSheet.create({\n    device: {\n        color: '#5bc8af',\n    },\n    deviceSelected: {\n        backgroundColor: '#d9d9d9dd',\n        alignSelf: 'flex-start',\n    },\n    deviceSelectedAssigned: {\n        borderWidth: 1,\n        borderColor: 'black',\n        borderRadius: 2,  \n        color: '#577FFF',\n    },\n    correcr: {\n        color: '#5bc8af',\n    },\n    incorrect: {\n        color: '#ff0000',\n    }\n});","import { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { useMediaQuery } from 'react-responsive';\nimport { Highlight } from '../components/Highlight';\n\nexport const Paper = ({text, devices} : {text: string, devices: Array<Device>}) => {\n  var count = 0;\n  const isTabletOrMobileDevice = useMediaQuery({    \n    maxDeviceWidth: 1224,\n  });\n  return (\n    <View style={[styles.container, isTabletOrMobileDevice ? styles.column : styles.row]}>\n      <ScrollView nestedScrollEnabled>\n        <View style={styles.paper}>\n        {text.split('\\n').map((paraghraph, index) => {\n          const size = paraghraph.length;\n          let flag = false;\n          const elem = (\n            <Text style={styles.text} key={index}>\n              {devices.map((device, index) => {\n                if (size+count > device.range[0] && count <= device.range[0] && size+count >= device.range[1] && count < device.range[1]) {\n                  flag = true;\n                  return <Highlight key={index} id={index} count={count} device={device} paraghraph={paraghraph} size={devices.length} />;\n                }\n              })}\n              {flag ? '' : paraghraph}\n            </Text>\n          )\n          count += size;\n          return elem;\n        })}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: '1px solid black',\n    },\n    paper: {\n      flex: 1,\n      marginVertical: 45,\n      marginHorizontal: 75,\n      display: 'flex',\n      flexDirection:'column',\n      flexWrap: 'wrap',\n    },\n    text: {\n      textAlign: 'left',\n      fontSize: 22,\n      fontFamily: \"Times New Roman\",\n      paddingVertical: 10,\n    },\n    row: {\n      width: '50%',\n    },\n    column: {\n      width: '90%',\n      marginBottom: 50,\n    }\n});","import { GestureResponderEvent, Pressable, StyleSheet, Text, View } from 'react-native';\n\nexport const SidebarButton = ({ text, onPress }: { text: string, onPress?: ((event: GestureResponderEvent) => void) | null | undefined } ) => {\n    return (\n        <Pressable onPress={onPress}>\n            <View style={styles.container}>\n                <Text selectable={false} style={styles.text}>{text}</Text>\n            </View>\n        </Pressable>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        width: 275,\n        display: 'flex',\n        backgroundColor: '#d9d9d9',\n        borderRadius: 33,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        marginVertical: 10,\n    },\n    text: {\n        fontWeight: 'bold',\n        padding: 10,\n        fontSize: 17,\n    }\n});","import React, { useState } from \"react\";\nimport { Pressable, StyleSheet, Text, View, Modal } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons'; \nimport Markdown from 'react-native-markdown-display';\nimport { useRecoilState } from \"recoil\";\nimport { pairingState, selectedState } from \"../lib/state\";\nimport { FontAwesome } from '@expo/vector-icons';\n\nexport const Tool = ({ id, name, description, size }: { id: number, name: string, description: string, size: number }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n    const [pairing, setPairing] = useRecoilState(pairingState);\n    const selectedText = useRecoilState(selectedState);\n    const selectedTextId = selectedText[0].indexOf(true);\n    \n    return (\n        <View style={styles.container} >\n            <View style={styles.tool}>\n                <Pressable onPress={() => {\n                    if (selectedText[0].includes(true)) {\n                        const idx = pairing.findIndex((pair) => pair.textId === selectedTextId);        \n                            let newPairing = structuredClone(pairing);\n                            newPairing[idx].deviceId = pairing[idx].deviceId === id ? -1 : id;\n                            setPairing(newPairing);\n                    }\n                }}>\n                    <View style={styles.buttonSelect}>{selectedText[0].includes(true) && pairing[pairing.findIndex((pair) => pair.textId === selectedTextId)].deviceId === id ? <FontAwesome name=\"square\" size={13} color=\"black\" /> : <></>}</View>\n                </Pressable>\n                <Text selectable={false} style={styles.device}>{name}</Text>\n            </View>\n            <View>\n                <Modal\n                    animationType=\"slide\"\n                    transparent={true}\n                    visible={modalVisible}\n                    onRequestClose={() => {\n                        setModalVisible(!modalVisible);\n                    }}\n                >\n                    <View style={styles.centeredView}>\n                        <View style={styles.modalView}>\n                            <Markdown>{description}</Markdown>\n                            <Pressable\n                                style={styles.buttonClose}\n                                onPress={() => setModalVisible(!modalVisible)}\n                            >\n                                <Text style={styles.textStyle}>Close</Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                </Modal>\n                <Pressable onPress={() => setModalVisible(true)}>\n                    <MaterialCommunityIcons name=\"chat-question-outline\" size={24} color=\"black\" />\n                </Pressable>\n            </View>\n            \n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({ \n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginHorizontal: 20,\n        height: 30,\n        width: 200,\n    },\n    device: {\n        \n    },\n    tool: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    buttonSelect: {\n        width: 15,\n        height: 15,\n        borderRadius: 2,\n        backgroundColor: '#d9d9d9',\n        marginRight: 10,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n      },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n        padding: 10,\n        borderRadius: 20,\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"justify\"\n    }\n});","import { StyleSheet, Text, View } from 'react-native';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRecoilState } from 'recoil';\nimport { pairingState, settingState } from '../lib/state';\nimport { Tool } from './Tool';\n\nexport const Toolbox = ({ tools }: { tools: Array<{\n    name: string;\n    description: string;\n  }>}) => {\n    const isTabletOrMobileDevice = useMediaQuery({    \n        maxDeviceWidth: 1224,\n      })\n    const [settings, setSettings] = useRecoilState(settingState);\n    const [pairing, setPairing] = useRecoilState(pairingState);\n    let pairCount = 0;\n    pairing.forEach((pair) => { if (pair.deviceId !== -1) pairCount++ });\n    return (\n        <View style={[styles.container, isTabletOrMobileDevice ? styles.column : styles.row]}>\n            <Text style={styles.text}>{settings.rhetoricHeadline} ({pairCount}/6)</Text>\n            {tools.map((tool, index) => (\n                <Tool key={index} id={index} name={tool.name} description={tool.description} size={tools.length} />\n            ))}\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        backgroundColor: '#5bc8af',\n        borderRadius: 33,\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        paddingBottom: 20,\n    },\n    text: {\n        fontWeight: 'bold',\n        padding: 10,\n        fontSize: 17,\n    },\n    row: {\n        width: 275,\n    },\n    column: {\n        width: \"90%\",\n    }\n});","import { StyleSheet, View } from 'react-native';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRecoilState } from 'recoil';\nimport { SidebarButton } from '../components/SidebarButton';\nimport { Toolbox } from '../components/Toolbox';\nimport { pairingState, resultsState, settingState } from '../lib/state';\n\nexport const ToolsSidebar = ({ tools, size, id, info, textSetter }: { tools: Array<Guide>, size: number, id: number, info: ChallengeText, textSetter: React.Dispatch<React.SetStateAction<number>>}) => {\n    const [results, setResults] = useRecoilState(resultsState);\n    const [pairing, setPairing] = useRecoilState(pairingState);\n    const [settings, setSettings] = useRecoilState(settingState);\n    const isTabletOrMobileDevice = useMediaQuery({    \n        maxDeviceWidth: 1224,\n      });\n    \n    return (\n        <View style={[styles.container, isTabletOrMobileDevice ? styles.column : styles.row]}>\n            <Toolbox tools={tools} />\n            {results === -1 ? <SidebarButton text={settings.checkAnswersButton} onPress={() => {\n                let results = 0;\n                for (let i = 0; i < pairing.length; i++) {\n                    if (pairing[i].deviceId === info.devices[i].name) results++;\n                }\n                setResults(Math.trunc((results / pairing.length) * 100));\n            }} /> : <></> }\n            <SidebarButton text={settings.nextButton} onPress={() => { textSetter((id+1) % size) }} />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexWrap: 'wrap',\n        display: 'flex',\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        marginHorizontal: 20,\n    },\n    row: {\n      width: '20%',\n    },\n    column: {\n      width: '90%',\n    }\n});\n","import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useRecoilState } from 'recoil';\nimport { Title } from '../components/Title';\nimport { ControlsSidebar } from '../layout/ControlsSidebar';\nimport { Paper } from '../layout/Paper';\nimport { ToolsSidebar } from '../layout/ToolsSidebar';\nimport { pairingState, resultsState, selectedState, settingState } from '../lib/state';\nimport '@expo/match-media'\nimport { useMediaQuery } from \"react-responsive\";\n\nexport const Main = ({ data, textState }: { data: Data | undefined, textState: [number, React.Dispatch<React.SetStateAction<number>>]}) => {\n  const [selected, setSelected] = useRecoilState(selectedState);\n  const [pairing, setPairing] = useRecoilState(pairingState);\n  const [results, setResults] = useRecoilState(resultsState);\n  const [settings, setSettings] = useRecoilState(settingState);\n  const [text, setText] = textState;\n  const [devices, setDevices] = useState([] as Guide[]);\n\n  \n  useEffect(() => {\n    setSettings(data?.settings!);\n  }, []);\n\n  useEffect(() => {\n    if (data !== undefined) {\n        setResults(-1);\n        setDevices([...data?.texts[text].devices.map((device) => data?.guides[device.name])!].sort(() => Math.random() - 0.5));\n        setSelected(Array(6).fill(false, 0, data?.texts[text].devices.length));\n        setPairing(Array.from(Array(6), (_, index) => { return { textId: index, deviceId: -1 }}));\n    }\n  }, [text]);\n  \n  const isTabletOrMobileDevice = useMediaQuery({    \n    maxDeviceWidth: 1224,\n  });\n\n  return (\n    <> \n        <Title title={data?.texts[text].name!} name={data?.texts[text].author!} />\n        <View style={[styles.container, isTabletOrMobileDevice ? styles.column : styles.row]}>\n            <ControlsSidebar res={data?.results!} />\n            <Paper text={data?.texts[text].text!} devices={data?.texts[text].devices!}/>\n            <ToolsSidebar tools={devices} id={text} size={data?.texts.length!} info={data?.texts[text]!} textSetter={setText}/>\n        </View>\n        <StatusBar style=\"auto\" />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    display: 'flex',\n    backgroundColor: '#fff',\n    justifyContent: 'space-around',\n    marginVertical: 50,\n    marginTop: 45\n  },\n  row: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n  },\n  column: {\n    alignItems: 'center',\n    flexDirection: 'column-reverse'\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport { BlurView } from 'expo-blur';\nimport { useEffect, useState } from 'react';\nimport { RecoilRoot } from 'recoil';\nimport LoadingScreen from './src/components/LoadingScreen';\nimport { Intro } from './src/layout/Intro';\nimport { Main } from './src/layout/Main';\n\nexport default function App() {\n  const textState = useState(0);\n  const [wasIntroduced, setIntro] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState<Data | undefined>(undefined);\n\n  useEffect(() => {\n    fetch('https://raw.githubusercontent.com/lampask/grasp-eng/dev/texts.json')\n      .then((response) => response.json())\n      .then((json) => {\n        (json as Data).texts = (json as Data).texts.sort(() => Math.random() - 0.5);\n        setData(json)\n      })\n      .catch((error) => console.error(error))\n      .finally(() => setLoading(false));\n  }, []);\n  \n  return (\n    <RecoilRoot>\n      {isLoading ? <LoadingScreen /> : (\n        <>\n          <Main data={data} textState={textState} />\n          {wasIntroduced ? <></> : <Intro data={data?.intro!} introduced={setIntro} />}\n        </>\n      )}\n    </RecoilRoot>\n  );\n}"],"sourceRoot":""}